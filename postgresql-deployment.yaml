# https://www.digitalocean.com/community/tutorials/how-to-deploy-postgres-to-kubernetes-cluster
# create namespace first
# Working version 2024-09-12 16:34
# As long as deployment is not deleted or node not restart
# , data is retained on cluster node in folder rpiCM4-2 /data/postgresql/*

apiVersion: v1
kind: Namespace
metadata:
  name: postgresql
  labels:
    app: postgres

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-secret
  namespace: postgresql
  labels:
    app: postgres
data:
  POSTGRES_DB: ps_db_dev
  POSTGRES_USER: {{ .POSTGRES_USER | b64enc }}     # Base64-encoded GitHub Secret
  POSTGRES_PASSWORD: {{ .POSTGRES_PASSWORD | b64enc }}  # Base64-encoded GitHub Secret

---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: postgres-volume
  namespace: postgresql
  labels:
    type: local
    app: postgres
spec:
  storageClassName: manual
  capacity:
    storage: 2Gi
  accessModes:
    - ReadWriteMany
  persistentVolumeReclaimPolicy: Retain # Recycle
  hostPath:
    path: /data/postgresql  # saving on local node's 

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-volume-claim
  namespace: postgresql
  labels:
    app: postgres
spec:
  storageClassName: manual # For saving postgresql data on local node
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 1Gi

---
# https://www.digitalocean.com/community/tutorials/how-to-deploy-postgres-to-kubernetes-cluster
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
  namespace: postgresql
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      # initContainer needed to empty /var/lib/postgresql/data so server starts
      initContainers:
        - name: init-postgres
          image: postgres:14
          command:
            - bash
            - "-c"
            - |
              #!/bin/bash
              set -e
              ls -A /var/lib/postgresql/data || (initdb /var/lib/postgresql/data && cp -R /var/lib/postgresql/empty/* /var/lib/postgresql/data)
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: postgresdata
            - mountPath: /var/lib/postgresql/empty
              name: emptydir
      containers:
        - name: postgres
          image: postgres:14
          imagePullPolicy: IfNotPresent
          lifecycle:
            postStart:
              exec:
                command: ["/bin/sh","-c","sleep 45 && PGPASSWORD=$POSTGRES_PASSWORD psql -w -d $POSTGRES_DB -U $POSTGRES_USER -c 'CREATE TABLE IF NOT EXISTS users (userid SERIAL PRIMARY KEY,username TEXT,password TEXT,token TEXT,type TEXT);'"]
          ports:
            - containerPort: 5432
          envFrom:
            - configMapRef:
                name: postgres-secret
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: postgresdata
      volumes:
        - name: postgresdata
          persistentVolumeClaim:
            claimName: postgres-volume-claim
        - name: emptydir
          emptyDir: {}
      nodeSelector:
        node-type-2: rpiCM4
        kubernetes.io/hostname: rpicm4-2  # always start on K3s node rpiCM4-2

---
apiVersion: v1
kind: Service
metadata:
  name: postgres
  namespace: postgresql
  labels:
    app: postgres
spec:
  type: LoadBalancer #NodePort
  ports:
    - port: 5432 #      nodePort: 30001 
      targetPort: 5432
  selector:
    app: postgres
